@use "sass:math";

// base & variables
@import 'base/type';
@import 'base/variables';
@import 'base/base';

// layout
@import 'layout/breakpoints';
@import 'layout/grid';

// colors
@import url(./tokens/tokens.css);
@import url(./tokens/theme.light.css);
// @import url(./tokens/theme.dark.css) (prefers-color-scheme: dark);
@import 'themes/colors';

// components
@import 'components/navrail';
@import 'components/button';
@import 'components/iconbtn';

// utilities
@import 'base/utilities';
@import 'layout/utility-layout';

// changes & additions
.container {
    position: relative;
    box-sizing: border-box;
    width: 100%;
    height: 100vh;
    margin: 0;
    padding: 56px 0;
    overflow: hidden;
}

.rail {
    background-color: var(--md-sys-color-primary-container);
    .rail-content {
        .destination-item {
            .indicator {
                .icon {
                    color: var(--md-sys-color-on-surface);
                }
            }
            .label {
                color: var(--md-sys-color-on-surface);
                font-weight: $bold-fw;
            }
        }
        .destination-active {
            .indicator {
                background-color: var(--md-sys-color-on-primary-container);
                .icon {
                    color: #fff;
                }
            }
            .label {
                color: var(--md-sys-color-on-primary-container);
                font-weight: $bold-fw;
            }
            &:hover {
                .indicator {
                    background-color: color-mix(in srgb, var(--md-sys-color-on-primary-container), #fff 8%);
                }
            }
            &:active {
                .indicator {
                    background-color: color-mix(in srgb, var(--md-sys-color-on-primary-container), #fff 12%);
                }
            }
        }
    }
}

.scenario {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: ($base-padding * 12) 0;
    border-radius: 0 $large-border-radius $large-border-radius 0;
    background-color: var(--md-ref-palette-primary95);
}

.socials {
    padding-top: $base-padding * 12;
    & > *:not(:first-child) {
        margin-left: $base-padding * 3;
    }
}

.context {
    display: inline-block;
    position: relative;
    width: 100px;
    height: 510px;
    overflow: hidden;
    background-color: var(--md-sys-color-on-primary-dark);
    .context-text {
        position: absolute;
        left: 70%;
        bottom: 0;
        transform: translate(0, 0) rotate(-90deg);
        transform-origin: left bottom;
        white-space: nowrap;
        font-size: 131px;
        letter-spacing: -6px;
        font-weight: $black-fw;
        color: var(--md-sys-color-on-primary);
    }
}

@each $breakpoint, $config in $grid-configurations {
    $columns: map-get($config, "columns");
    $gap: map-get($config, "gap");
    $margin: map-get($config, "margin");
    $container-width: map-get($config, "container-width");

    $col: math.div((($container-width - 72px) - ($margin * 2) - ($gap * ($columns - 1))), $columns);

    @media screen and (min-width: map-get($breakpoints, $breakpoint)) {
        .scene {
            position: relative;
            width: 100%;
            height: 100%;
            padding-left: $margin;
            border-radius: $x-large-border-radius;
            background-color: var(--md-sys-color-surface);
            z-index: 1;
        }

        .index-headline {
            width: $col * 5 + $gap * 4;
            font-size: 65px;
            font-weight: $black-fw;
            text-transform: uppercase;
            letter-spacing: 3.25px;
            line-height: 1.2;
            color: var(--md-ref-palette-on-surface);
        }

        .index-detail {
            width: $col * 2 + $gap * 2;
            font-size: $type-label-medium;
            font-weight: $bold-fw;  
            line-height: normal;
            letter-spacing: $letter-spacing;
        }

        .index-thumbnail {
            position: relative;
            width: $col * 4 + $gap * 4;
            height: 100%;
            border-radius: $x-large-border-radius;
            background-color: var(--md-ref-palette-primary95);
            overflow: hidden;
            .thumbnail {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
            .index-btn {
                position: absolute;
                left: $base-padding * 6;
                bottom: $base-padding * 12;
                z-index: 2;
                .filled-iconbtn {
                    background-color: var(--md-sys-color-primary-container);
                    .icon {
                        color: var(--md-sys-color-on-primary-container);
                    }
                }
            }
        }
    }
}
